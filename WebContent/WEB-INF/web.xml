<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>crunchprep</display-name>
  <welcome-file-list>
  <welcome-file>pages/registration/signin.jsp</welcome-file>
  <welcome-file>index.jsp</welcome-file>
    
  </welcome-file-list>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>org.apache.struts2.tiles.StrutsTilesListener</listener-class>
  </listener>
   <listener>
    <listener-class>com.greenbuds.crunchprep.lisiteners.ApplicationListener</listener-class>
  </listener>
 
 <listener>
   <listener-class>org.springframework.web.context.ContextLoaderListener
</listener-class>
</listener>

 <listener>
   <listener-class>com.greenbuds.crunchprep.lisiteners.SessionListener
</listener-class>
</listener>


  <context-param>
    <param-name>org.apache.tiles.impl.BasicTilesContainer.DEFINITIONS_CONFIG</param-name>
    <param-value>/WEB-INF/tiles.xml,/WEB-INF/contentcreatorTiles.xml,/WEB-INF/lessonsTiles.xml,
    /WEB-INF/practiceSessionTiles.xml,/WEB-INF/adminTiles.xml,/WEB-INF/mentorTiles.xml,/WEB-INF/fullLengthTestTiles.xml,/WEB-INF/skilldataTiles.xml,/WEB-INF/userTiles.xml</param-value>

  </context-param>

  <!-- Resource reference, which is typically to an object factory for resources such as a JDBC DataSource, 
  a JavaMail Session, or custom object factories configured into Tomcat. -->

  <context-param>
  <param-name>userimagepath</param-name>
  <param-value>image/users/</param-value>
  </context-param>
  <context-param>
  <param-name>DefaultImage</param-name>
  <param-value>assets/images/defaultUser.png</param-value>
  </context-param>

  <resource-ref>
    <description>CrunchPrep Database Connection</description>
    <res-ref-name>jdbc/crunchPrepDB</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  <!--  End Resource refernce  -->
  
  <!--  Environment Setup -->
  
  <!--  End Environment Setup -->
  
  <!--  Session Time Out Settings -->
  <session-config>
  <session-timeout>30</session-timeout>
  </session-config>
  <!--  End Session Time Out Settings -->
  
  <servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>
			org.directwebremoting.servlet.DwrServlet
		</servlet-class>
		<!-- This should NEVER be present in live -->
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- Remove this unless you want to use active reverse ajax -->
		<init-param>
			<param-name>activeReverseAjaxEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- By default DWR creates application scope objects when they are first
			used. This creates them when the app-server is started -->
		<init-param>
			<param-name>
				initApplicationScopeCreatorsAtStartup
			</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- This enables full streaming mode. It's probably better to leave this
			out if you are running across the internet -->
		<init-param>
			<param-name>maxWaitAfterWrite</param-name>
			<param-value>-1</param-value>
		</init-param>
		<!--
			For more information on these parameters, see:
			- http://getahead.org/dwr/server/servlet
			- http://getahead.org/dwr/reverse-ajax/configuration
		-->
	 <!-- 新加corssDomainSessionSecurity参数 -->  
	  	<init-param>     
            <param-name>crossDomainSessionSecurity</param-name>     
            <param-value>false</param-value>     
    	</init-param>  
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
</web-app>